#Requires -Version 7.0

<#
    Patches C# code generated by kiota.
    Workaround for bug at https://github.com/microsoft/kiota/issues/3944#issuecomment-2597201229.
#>
param (
    # Path to directory where kiota generated C# code.
    [Parameter(Mandatory=$true)]
    [string]$kiotaOutputDir
)

$PSStyle.OutputRendering = 'PlainText'
$osLineBreak = [System.Environment]::NewLine
$files = Get-ChildItem -Path $kiotaOutputDir -Recurse -Include *.cs

foreach ($file in $files) {
    # remove blank lines at EOF, in case this script runs more than once
    $content = (Get-Content $file -Raw).TrimEnd()

    # add #nullable enable, suppress extra warning CS8625: Cannot convert null literal to non-nullable reference type.
    $content = ($content -replace "// <auto-generated/>${osLineBreak}(?<nextLineStart>#pragma|using)", "// <auto-generated/>${osLineBreak}#nullable enable${osLineBreak}#pragma warning disable CS8625${osLineBreak}`$1")

    # remove conditionals
    $content = ($content -replace "(?s)#if NETSTANDARD2_1_OR_GREATER .*?${osLineBreak}#nullable enable${osLineBreak}(?<ifBody>.*?)${osLineBreak}#nullable restore${osLineBreak}#else${osLineBreak}(?<elseBody>.*?)${osLineBreak}#endif", "`$1")

    # insert new line between member and next summary
    $content = ($content -replace "}${osLineBreak}(?<indentedSummary>[ ]+/// <summary>)", "}${osLineBreak}${osLineBreak}`$1")

    try {
        Set-Content -Path $file -Value $content -ErrorAction Stop
    }
    catch {
        # files are occasionally locked when running locally, retry once
        Start-Sleep -Milliseconds 100
        Set-Content -Path $file -Value $content -ErrorAction Stop

        if ($error.Count -ne 0) {
            $thisScriptName=Split-Path -leaf $PSCommandpath
            echo "Failed to run $thisScriptName at file $file"
        }
    }
}
