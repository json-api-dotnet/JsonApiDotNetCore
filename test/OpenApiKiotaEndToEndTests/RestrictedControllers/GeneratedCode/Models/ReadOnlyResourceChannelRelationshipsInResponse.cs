// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace OpenApiKiotaEndToEndTests.RestrictedControllers.GeneratedCode.Models {
    #pragma warning disable CS1591
    public class ReadOnlyResourceChannelRelationshipsInResponse : IBackedModel, IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>The audioStreams property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ToManyDataStreamInResponse? AudioStreams {
            get { return BackingStore?.Get<ToManyDataStreamInResponse?>("audioStreams"); }
            set { BackingStore?.Set("audioStreams", value); }
        }
#nullable restore
#else
        public ToManyDataStreamInResponse AudioStreams {
            get { return BackingStore?.Get<ToManyDataStreamInResponse>("audioStreams"); }
            set { BackingStore?.Set("audioStreams", value); }
        }
#endif
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The ultraHighDefinitionVideoStream property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public NullableToOneDataStreamInResponse? UltraHighDefinitionVideoStream {
            get { return BackingStore?.Get<NullableToOneDataStreamInResponse?>("ultraHighDefinitionVideoStream"); }
            set { BackingStore?.Set("ultraHighDefinitionVideoStream", value); }
        }
#nullable restore
#else
        public NullableToOneDataStreamInResponse UltraHighDefinitionVideoStream {
            get { return BackingStore?.Get<NullableToOneDataStreamInResponse>("ultraHighDefinitionVideoStream"); }
            set { BackingStore?.Set("ultraHighDefinitionVideoStream", value); }
        }
#endif
        /// <summary>The videoStream property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ToOneDataStreamInResponse? VideoStream {
            get { return BackingStore?.Get<ToOneDataStreamInResponse?>("videoStream"); }
            set { BackingStore?.Set("videoStream", value); }
        }
#nullable restore
#else
        public ToOneDataStreamInResponse VideoStream {
            get { return BackingStore?.Get<ToOneDataStreamInResponse>("videoStream"); }
            set { BackingStore?.Set("videoStream", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="ReadOnlyResourceChannelRelationshipsInResponse"/> and sets the default values.
        /// </summary>
        public ReadOnlyResourceChannelRelationshipsInResponse()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="ReadOnlyResourceChannelRelationshipsInResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static ReadOnlyResourceChannelRelationshipsInResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new ReadOnlyResourceChannelRelationshipsInResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"audioStreams", n => { AudioStreams = n.GetObjectValue<ToManyDataStreamInResponse>(ToManyDataStreamInResponse.CreateFromDiscriminatorValue); } },
                {"ultraHighDefinitionVideoStream", n => { UltraHighDefinitionVideoStream = n.GetObjectValue<NullableToOneDataStreamInResponse>(NullableToOneDataStreamInResponse.CreateFromDiscriminatorValue); } },
                {"videoStream", n => { VideoStream = n.GetObjectValue<ToOneDataStreamInResponse>(ToOneDataStreamInResponse.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<ToManyDataStreamInResponse>("audioStreams", AudioStreams);
            writer.WriteObjectValue<NullableToOneDataStreamInResponse>("ultraHighDefinitionVideoStream", UltraHighDefinitionVideoStream);
            writer.WriteObjectValue<ToOneDataStreamInResponse>("videoStream", VideoStream);
        }
    }
}
