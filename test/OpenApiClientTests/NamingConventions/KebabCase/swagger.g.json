{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenApiTests",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "paths": {
    "/staff-members": {
      "get": {
        "tags": [
          "staff-members"
        ],
        "summary": "Retrieves a collection of staff-members.",
        "operationId": "get-staff-member-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staff-members, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staff-member-collection-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "staff-members"
        ],
        "summary": "Retrieves a collection of staff-members without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-staff-member-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "staff-members"
        ],
        "summary": "Creates a new staff-member.",
        "operationId": "post-staff-member",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the staff-member to create.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/staff-member-post-request-document"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The staff-member was successfully created, which resulted in additional changes. The newly created staff-member is returned.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staff-member-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The staff-member was successfully created, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "403": {
            "description": "Client-generated IDs cannot be used at this endpoint.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/staff-members/{id}": {
      "get": {
        "tags": [
          "staff-members"
        ],
        "summary": "Retrieves an individual staff-member by its identifier.",
        "operationId": "get-staff-member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the staff-member to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staff-member.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staff-member-primary-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The staff-member does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "staff-members"
        ],
        "summary": "Retrieves an individual staff-member by its identifier without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-staff-member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the staff-member to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The staff-member does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "staff-members"
        ],
        "summary": "Updates an existing staff-member.",
        "operationId": "patch-staff-member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the staff-member to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the staff-member to update. Omitted fields are left unchanged.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/staff-member-patch-request-document"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The staff-member was successfully updated, which resulted in additional changes. The updated staff-member is returned.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staff-member-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The staff-member was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The staff-member or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type or identifier in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "staff-members"
        ],
        "summary": "Deletes an existing staff-member by its identifier.",
        "operationId": "delete-staff-member",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the staff-member to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The staff-member was successfully deleted."
          },
          "404": {
            "description": "The staff-member does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/supermarkets": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves a collection of supermarkets.",
        "operationId": "get-supermarket-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found supermarkets, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/supermarket-collection-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves a collection of supermarkets without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-supermarket-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Creates a new supermarket.",
        "operationId": "post-supermarket",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the supermarket to create.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/supermarket-post-request-document"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The supermarket was successfully created, which resulted in additional changes. The newly created supermarket is returned.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/supermarket-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The supermarket was successfully created, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "403": {
            "description": "Client-generated IDs cannot be used at this endpoint.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/supermarkets/{id}": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves an individual supermarket by its identifier.",
        "operationId": "get-supermarket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found supermarket.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/supermarket-primary-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves an individual supermarket by its identifier without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-supermarket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Updates an existing supermarket.",
        "operationId": "patch-supermarket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the supermarket to update. Omitted fields are left unchanged.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/supermarket-patch-request-document"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The supermarket was successfully updated, which resulted in additional changes. The updated supermarket is returned.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/supermarket-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The supermarket was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type or identifier in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Deletes an existing supermarket by its identifier.",
        "operationId": "delete-supermarket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The supermarket was successfully deleted."
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/supermarkets/{id}/backup-store-manager": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member of an individual supermarket's backup-store-manager relationship.",
        "operationId": "get-supermarket-backup-store-manager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staff-member, or `null` if it was not found.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/nullable-staff-member-secondary-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member of an individual supermarket's backup-store-manager relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-supermarket-backup-store-manager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      }
    },
    "/supermarkets/{id}/relationships/backup-store-manager": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member identity of an individual supermarket's backup-store-manager relationship.",
        "operationId": "get-supermarket-backup-store-manager-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member identity to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staff-member identity, or `null` if it was not found.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/nullable-staff-member-identifier-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member identity of an individual supermarket's backup-store-manager relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-supermarket-backup-store-manager-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member identity to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Clears or assigns an existing staff-member to the backup-store-manager relationship of an individual supermarket.",
        "operationId": "patch-supermarket-backup-store-manager-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose backup-store-manager relationship to assign or clear.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identity of the staff-member to assign to the backup-store-manager relationship, or `null` to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/nullable-to-one-staff-member-in-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The backup-store-manager relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/supermarkets/{id}/cashiers": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-members of an individual supermarket's cashiers relationship.",
        "operationId": "get-supermarket-cashiers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-members to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staff-members, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staff-member-collection-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-members of an individual supermarket's cashiers relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-supermarket-cashiers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-members to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      }
    },
    "/supermarkets/{id}/relationships/cashiers": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member identities of an individual supermarket's cashiers relationship.",
        "operationId": "get-supermarket-cashiers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staff-member identities, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staff-member-identifier-collection-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member identities of an individual supermarket's cashiers relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-supermarket-cashiers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "post": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Adds existing staff-members to the cashiers relationship of an individual supermarket.",
        "operationId": "post-supermarket-cashiers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to add staff-members to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the staff-members to add to the cashiers relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-staff-member-in-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The staff-members were successfully added, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Assigns existing staff-members to the cashiers relationship of an individual supermarket.",
        "operationId": "patch-supermarket-cashiers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose cashiers relationship to assign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the staff-members to assign to the cashiers relationship, or an empty array to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-staff-member-in-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The cashiers relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Removes existing staff-members from the cashiers relationship of an individual supermarket.",
        "operationId": "delete-supermarket-cashiers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to remove staff-members from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the staff-members to remove from the cashiers relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-staff-member-in-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The staff-members were successfully removed, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/supermarkets/{id}/store-manager": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member of an individual supermarket's store-manager relationship.",
        "operationId": "get-supermarket-store-manager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staff-member, or `null` if it was not found.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staff-member-secondary-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member of an individual supermarket's store-manager relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-supermarket-store-manager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      }
    },
    "/supermarkets/{id}/relationships/store-manager": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member identity of an individual supermarket's store-manager relationship.",
        "operationId": "get-supermarket-store-manager-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member identity to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staff-member identity, or `null` if it was not found.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staff-member-identifier-response-document"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staff-member identity of an individual supermarket's store-manager relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-supermarket-store-manager-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staff-member identity to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "ETag identifying the version of the fetched resource.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "example": "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Assigns an existing staff-member to the store-manager relationship of an individual supermarket.",
        "operationId": "patch-supermarket-store-manager-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose store-manager relationship to assign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identity of the staff-member to assign to the store-manager relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-one-staff-member-in-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The store-manager relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "data-in-response": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "staff-members": "#/components/schemas/staff-member-data-in-response",
            "supermarkets": "#/components/schemas/supermarket-data-in-response"
          }
        },
        "x-abstract": true
      },
      "error-links": {
        "type": "object",
        "properties": {
          "about": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "error-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/error-links"
              }
            ],
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/error-source"
              }
            ],
            "nullable": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "error-response-document": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error-object"
            }
          }
        },
        "additionalProperties": false
      },
      "error-source": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "nullable": true
          },
          "parameter": {
            "type": "string",
            "nullable": true
          },
          "header": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "jsonapi": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "ext": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "profile": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "links-in-relationship": {
        "required": [
          "related",
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "related": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "links-in-resource-collection-document": {
        "required": [
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "describedby": {
            "type": "string"
          },
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          },
          "next": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "links-in-resource-data": {
        "required": [
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "links-in-resource-document": {
        "required": [
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "describedby": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "links-in-resource-identifier-collection-document": {
        "required": [
          "related",
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "related": {
            "minLength": 1,
            "type": "string"
          },
          "describedby": {
            "type": "string"
          },
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          },
          "next": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "links-in-resource-identifier-document": {
        "required": [
          "related",
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "related": {
            "minLength": 1,
            "type": "string"
          },
          "describedby": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "nullable-staff-member-identifier-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-resource-identifier-document"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-identifier"
              }
            ],
            "nullable": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "nullable-staff-member-secondary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-resource-document"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-data-in-response"
              }
            ],
            "nullable": true
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "nullable-to-one-staff-member-in-request": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-identifier"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "nullable-to-one-staff-member-in-response": {
        "required": [
          "links"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-relationship"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-identifier"
              }
            ],
            "nullable": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "staff-member-attributes-in-patch-request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "staff-member-attributes-in-post-request": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "staff-member-attributes-in-response": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "staff-member-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-resource-collection-document"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/staff-member-data-in-response"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "staff-member-data-in-patch-request": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/staff-member-resource-type"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-attributes-in-patch-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "staff-member-data-in-post-request": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/staff-member-resource-type"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-attributes-in-post-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "staff-member-data-in-response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/data-in-response"
          },
          {
            "required": [
              "links"
            ],
            "type": "object",
            "properties": {
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/staff-member-attributes-in-response"
                  }
                ]
              },
              "links": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/links-in-resource-data"
                  }
                ]
              },
              "meta": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "nullable": true
                }
              }
            },
            "additionalProperties": false
          }
        ],
        "additionalProperties": false
      },
      "staff-member-identifier": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/staff-member-resource-type"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "staff-member-identifier-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-resource-identifier-collection-document"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/staff-member-identifier"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "staff-member-identifier-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-resource-identifier-document"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-identifier"
              }
            ]
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "staff-member-patch-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-data-in-patch-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "staff-member-post-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-data-in-post-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "staff-member-primary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-resource-document"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-data-in-response"
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "staff-member-resource-type": {
        "enum": [
          "staff-members"
        ],
        "type": "string",
        "additionalProperties": false
      },
      "staff-member-secondary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-resource-document"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-data-in-response"
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "supermarket-attributes-in-patch-request": {
        "type": "object",
        "properties": {
          "name-of-city": {
            "type": "string"
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-type"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-attributes-in-post-request": {
        "required": [
          "name-of-city"
        ],
        "type": "object",
        "properties": {
          "name-of-city": {
            "type": "string"
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-type"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-attributes-in-response": {
        "type": "object",
        "properties": {
          "name-of-city": {
            "type": "string"
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-type"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-resource-collection-document"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/supermarket-data-in-response"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "supermarket-data-in-patch-request": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/supermarket-resource-type"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-attributes-in-patch-request"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-relationships-in-patch-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-data-in-post-request": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/supermarket-resource-type"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-attributes-in-post-request"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-relationships-in-post-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-data-in-response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/data-in-response"
          },
          {
            "required": [
              "links"
            ],
            "type": "object",
            "properties": {
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/supermarket-attributes-in-response"
                  }
                ]
              },
              "relationships": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/supermarket-relationships-in-response"
                  }
                ]
              },
              "links": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/links-in-resource-data"
                  }
                ]
              },
              "meta": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "nullable": true
                }
              }
            },
            "additionalProperties": false
          }
        ],
        "additionalProperties": false
      },
      "supermarket-patch-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-data-in-patch-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-post-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-data-in-post-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-primary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-resource-document"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarket-data-in-response"
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "supermarket-relationships-in-patch-request": {
        "type": "object",
        "properties": {
          "store-manager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-one-staff-member-in-request"
              }
            ]
          },
          "backup-store-manager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nullable-to-one-staff-member-in-request"
              }
            ]
          },
          "cashiers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-staff-member-in-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-relationships-in-post-request": {
        "required": [
          "store-manager"
        ],
        "type": "object",
        "properties": {
          "store-manager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-one-staff-member-in-request"
              }
            ]
          },
          "backup-store-manager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nullable-to-one-staff-member-in-request"
              }
            ]
          },
          "cashiers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-staff-member-in-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-relationships-in-response": {
        "type": "object",
        "properties": {
          "store-manager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-one-staff-member-in-response"
              }
            ]
          },
          "backup-store-manager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nullable-to-one-staff-member-in-response"
              }
            ]
          },
          "cashiers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-staff-member-in-response"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarket-resource-type": {
        "enum": [
          "supermarkets"
        ],
        "type": "string",
        "additionalProperties": false
      },
      "supermarket-type": {
        "enum": [
          "Traditional",
          "Budget",
          "Warehouse"
        ],
        "type": "string"
      },
      "to-many-staff-member-in-request": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/staff-member-identifier"
            }
          }
        },
        "additionalProperties": false
      },
      "to-many-staff-member-in-response": {
        "required": [
          "links"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-relationship"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/staff-member-identifier"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "to-one-staff-member-in-request": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-identifier"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "to-one-staff-member-in-response": {
        "required": [
          "links"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links-in-relationship"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staff-member-identifier"
              }
            ]
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      }
    }
  }
}