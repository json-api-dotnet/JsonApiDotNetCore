{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenApiTests",
    "version": "1.0"
  },
  "paths": {
    "/supermarkets": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves a collection of supermarkets.",
        "operationId": "getSupermarketCollection",
        "responses": {
          "200": {
            "description": "Successfully returns the found supermarkets, or an empty array if none were found.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/supermarketCollectionResponseDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves a collection of supermarkets without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "headSupermarketCollection",
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          }
        }
      },
      "post": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Creates a new supermarket.",
        "operationId": "postSupermarket",
        "requestBody": {
          "description": "The attributes and relationships of the supermarket to create.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/supermarketPostRequestDocument"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The supermarket was successfully created, which resulted in additional changes. The newly created supermarket is returned.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/supermarketPrimaryResponseDocument"
                }
              }
            }
          },
          "204": {
            "description": "The supermarket was successfully created, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed."
          },
          "409": {
            "description": "A resource type in the request body is incompatible."
          },
          "422": {
            "description": "Validation of the request body failed."
          },
          "403": {
            "description": "Client-generated IDs cannot be used at this endpoint."
          }
        }
      }
    },
    "/supermarkets/{id}": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves an individual supermarket by its identifier.",
        "operationId": "getSupermarket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found supermarket.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/supermarketPrimaryResponseDocument"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves an individual supermarket by its identifier without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "headSupermarket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Updates an existing supermarket.",
        "operationId": "patchSupermarket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the supermarket to update. Omitted fields are left unchanged.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/supermarketPatchRequestDocument"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The supermarket was successfully updated, which resulted in additional changes. The updated supermarket is returned.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/supermarketPrimaryResponseDocument"
                }
              }
            }
          },
          "204": {
            "description": "The supermarket was successfully updated, which did not result in additional changes."
          },
          "404": {
            "description": "The supermarket or a related resource does not exist."
          },
          "400": {
            "description": "The request body is missing or malformed."
          },
          "409": {
            "description": "A resource type or identifier in the request body is incompatible."
          },
          "422": {
            "description": "Validation of the request body failed."
          }
        }
      },
      "delete": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Deletes an existing supermarket by its identifier.",
        "operationId": "deleteSupermarket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The supermarket was successfully deleted."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      }
    },
    "/supermarkets/{id}/backupStoreManager": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember of an individual supermarket's backupStoreManager relationship.",
        "operationId": "getSupermarketBackupStoreManager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staffMember, or `null` if it was not found.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/nullableStaffMemberSecondaryResponseDocument"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember of an individual supermarket's backupStoreManager relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "headSupermarketBackupStoreManager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      }
    },
    "/supermarkets/{id}/relationships/backupStoreManager": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember identity of an individual supermarket's backupStoreManager relationship.",
        "operationId": "getSupermarketBackupStoreManagerRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember identity to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staffMember identity, or `null` if it was not found.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/nullableStaffMemberIdentifierResponseDocument"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember identity of an individual supermarket's backupStoreManager relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "headSupermarketBackupStoreManagerRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember identity to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Clears or assigns an existing staffMember to the backupStoreManager relationship of an individual supermarket.",
        "operationId": "patchSupermarketBackupStoreManagerRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose backupStoreManager relationship to assign or clear.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The identity of the staffMember to assign to the backupStoreManager relationship, or `null` to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/nullableToOneStaffMemberInRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The backupStoreManager relationship was successfully updated, which did not result in additional changes."
          },
          "404": {
            "description": "The supermarket does not exist."
          },
          "400": {
            "description": "The request body is missing or malformed."
          },
          "409": {
            "description": "A resource type in the request body is incompatible."
          }
        }
      }
    },
    "/supermarkets/{id}/cashiers": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMembers of an individual supermarket's cashiers relationship.",
        "operationId": "getSupermarketCashiers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMembers to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staffMembers, or an empty array if none were found.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staffMemberCollectionResponseDocument"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMembers of an individual supermarket's cashiers relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "headSupermarketCashiers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMembers to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      }
    },
    "/supermarkets/{id}/relationships/cashiers": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember identities of an individual supermarket's cashiers relationship.",
        "operationId": "getSupermarketCashiersRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember identities to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staffMember identities, or an empty array if none were found.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staffMemberIdentifierCollectionResponseDocument"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember identities of an individual supermarket's cashiers relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "headSupermarketCashiersRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember identities to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "post": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Adds existing staffMembers to the cashiers relationship of an individual supermarket.",
        "operationId": "postSupermarketCashiersRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to add staffMembers to.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the staffMembers to add to the cashiers relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/toManyStaffMemberInRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The staffMembers were successfully added, which did not result in additional changes."
          },
          "404": {
            "description": "The supermarket does not exist."
          },
          "400": {
            "description": "The request body is missing or malformed."
          },
          "409": {
            "description": "A resource type in the request body is incompatible."
          }
        }
      },
      "patch": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Assigns existing staffMembers to the cashiers relationship of an individual supermarket.",
        "operationId": "patchSupermarketCashiersRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose cashiers relationship to assign.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the staffMembers to assign to the cashiers relationship, or an empty array to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/toManyStaffMemberInRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The cashiers relationship was successfully updated, which did not result in additional changes."
          },
          "404": {
            "description": "The supermarket does not exist."
          },
          "400": {
            "description": "The request body is missing or malformed."
          },
          "409": {
            "description": "A resource type in the request body is incompatible."
          }
        }
      },
      "delete": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Removes existing staffMembers from the cashiers relationship of an individual supermarket.",
        "operationId": "deleteSupermarketCashiersRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket to remove staffMembers from.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the staffMembers to remove from the cashiers relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/toManyStaffMemberInRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The staffMembers were successfully removed, which did not result in additional changes."
          },
          "404": {
            "description": "The supermarket does not exist."
          },
          "400": {
            "description": "The request body is missing or malformed."
          },
          "409": {
            "description": "A resource type in the request body is incompatible."
          }
        }
      }
    },
    "/supermarkets/{id}/storeManager": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember of an individual supermarket's storeManager relationship.",
        "operationId": "getSupermarketStoreManager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staffMember, or `null` if it was not found.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staffMemberSecondaryResponseDocument"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember of an individual supermarket's storeManager relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "headSupermarketStoreManager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      }
    },
    "/supermarkets/{id}/relationships/storeManager": {
      "get": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember identity of an individual supermarket's storeManager relationship.",
        "operationId": "getSupermarketStoreManagerRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember identity to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found staffMember identity, or `null` if it was not found.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/staffMemberIdentifierResponseDocument"
                }
              }
            }
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "head": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Retrieves the related staffMember identity of an individual supermarket's storeManager relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "headSupermarketStoreManagerRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose related staffMember identity to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "404": {
            "description": "The supermarket does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "supermarkets"
        ],
        "summary": "Assigns an existing staffMember to the storeManager relationship of an individual supermarket.",
        "operationId": "patchSupermarketStoreManagerRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the supermarket whose storeManager relationship to assign.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The identity of the staffMember to assign to the storeManager relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/toOneStaffMemberInRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The storeManager relationship was successfully updated, which did not result in additional changes."
          },
          "404": {
            "description": "The supermarket does not exist."
          },
          "400": {
            "description": "The request body is missing or malformed."
          },
          "409": {
            "description": "A resource type in the request body is incompatible."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "jsonapiObject": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "ext": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "profile": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "linksInRelationshipObject": {
        "required": [
          "related",
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "related": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "linksInResourceCollectionDocument": {
        "required": [
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "describedby": {
            "type": "string"
          },
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          },
          "next": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "linksInResourceDocument": {
        "required": [
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "describedby": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "linksInResourceIdentifierCollectionDocument": {
        "required": [
          "related",
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "related": {
            "minLength": 1,
            "type": "string"
          },
          "describedby": {
            "type": "string"
          },
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          },
          "next": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "linksInResourceIdentifierDocument": {
        "required": [
          "related",
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          },
          "related": {
            "minLength": 1,
            "type": "string"
          },
          "describedby": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "linksInResourceObject": {
        "required": [
          "self"
        ],
        "type": "object",
        "properties": {
          "self": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "nullableStaffMemberIdentifierResponseDocument": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapiObject"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceIdentifierDocument"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberIdentifier"
              }
            ],
            "nullable": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "nullableStaffMemberSecondaryResponseDocument": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapiObject"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceDocument"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberDataInResponse"
              }
            ],
            "nullable": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "nullableToOneStaffMemberInRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberIdentifier"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "nullableToOneStaffMemberInResponse": {
        "required": [
          "links"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInRelationshipObject"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberIdentifier"
              }
            ],
            "nullable": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "staffMemberAttributesInResponse": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "staffMemberCollectionResponseDocument": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapiObject"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceCollectionDocument"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/staffMemberDataInResponse"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "staffMemberDataInResponse": {
        "required": [
          "id",
          "links",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberResourceType"
              }
            ]
          },
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberAttributesInResponse"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceObject"
              }
            ]
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "staffMemberIdentifier": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberResourceType"
              }
            ]
          },
          "id": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "staffMemberIdentifierCollectionResponseDocument": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapiObject"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceIdentifierCollectionDocument"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/staffMemberIdentifier"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "staffMemberIdentifierResponseDocument": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapiObject"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceIdentifierDocument"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberIdentifier"
              }
            ]
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "staffMemberResourceType": {
        "enum": [
          "staffMembers"
        ],
        "type": "string"
      },
      "staffMemberSecondaryResponseDocument": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapiObject"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceDocument"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberDataInResponse"
              }
            ]
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "supermarketAttributesInPatchRequest": {
        "type": "object",
        "properties": {
          "nameOfCity": {
            "type": "string"
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketAttributesInPostRequest": {
        "required": [
          "nameOfCity"
        ],
        "type": "object",
        "properties": {
          "nameOfCity": {
            "type": "string"
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketAttributesInResponse": {
        "required": [
          "nameOfCity"
        ],
        "type": "object",
        "properties": {
          "nameOfCity": {
            "type": "string"
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketCollectionResponseDocument": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapiObject"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceCollectionDocument"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/supermarketDataInResponse"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "supermarketDataInPatchRequest": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketResourceType"
              }
            ]
          },
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketAttributesInPatchRequest"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketRelationshipsInPatchRequest"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketDataInPostRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketResourceType"
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketAttributesInPostRequest"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketRelationshipsInPostRequest"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketDataInResponse": {
        "required": [
          "id",
          "links",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketResourceType"
              }
            ]
          },
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketAttributesInResponse"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketRelationshipsInResponse"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceObject"
              }
            ]
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "supermarketPatchRequestDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketDataInPatchRequest"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketPostRequestDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketDataInPostRequest"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketPrimaryResponseDocument": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapiObject"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInResourceDocument"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/supermarketDataInResponse"
              }
            ]
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "supermarketRelationshipsInPatchRequest": {
        "type": "object",
        "properties": {
          "storeManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/toOneStaffMemberInRequest"
              }
            ]
          },
          "backupStoreManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nullableToOneStaffMemberInRequest"
              }
            ]
          },
          "cashiers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/toManyStaffMemberInRequest"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketRelationshipsInPostRequest": {
        "required": [
          "storeManager"
        ],
        "type": "object",
        "properties": {
          "storeManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/toOneStaffMemberInRequest"
              }
            ]
          },
          "backupStoreManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nullableToOneStaffMemberInRequest"
              }
            ]
          },
          "cashiers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/toManyStaffMemberInRequest"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketRelationshipsInResponse": {
        "required": [
          "storeManager"
        ],
        "type": "object",
        "properties": {
          "storeManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/toOneStaffMemberInResponse"
              }
            ]
          },
          "backupStoreManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nullableToOneStaffMemberInResponse"
              }
            ]
          },
          "cashiers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/toManyStaffMemberInResponse"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "supermarketResourceType": {
        "enum": [
          "supermarkets"
        ],
        "type": "string"
      },
      "supermarketType": {
        "enum": [
          "Traditional",
          "Budget",
          "Warehouse"
        ],
        "type": "string"
      },
      "toManyStaffMemberInRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/staffMemberIdentifier"
            }
          }
        },
        "additionalProperties": false
      },
      "toManyStaffMemberInResponse": {
        "required": [
          "links"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInRelationshipObject"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/staffMemberIdentifier"
            }
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      },
      "toOneStaffMemberInRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberIdentifier"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "toOneStaffMemberInResponse": {
        "required": [
          "links"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/linksInRelationshipObject"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/staffMemberIdentifier"
              }
            ]
          },
          "meta": {
            "type": "object",
            "additionalProperties": { }
          }
        },
        "additionalProperties": false
      }
    }
  }
}