{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenApiTests",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "paths": {
    "/api/airplanes": {
      "get": {
        "tags": [
          "airplanes"
        ],
        "summary": "Retrieves a collection of airplanes.",
        "operationId": "get-airplane-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found airplanes, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/airplane-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "airplanes"
        ],
        "summary": "Retrieves a collection of airplanes without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-airplane-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "airplanes"
        ],
        "summary": "Creates a new airplane.",
        "operationId": "post-airplane",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the airplane to create.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/create-airplane-request-document"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The airplane was successfully created, which resulted in additional changes. The newly created airplane is returned.",
            "headers": {
              "Location": {
                "description": "The URL at which the newly created airplane can be retrieved.",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/airplane-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The airplane was successfully created, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "403": {
            "description": "Client-generated IDs cannot be used at this endpoint.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "A related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/airplanes/{id}": {
      "get": {
        "tags": [
          "airplanes"
        ],
        "summary": "Retrieves an individual airplane by its identifier.",
        "operationId": "get-airplane",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found airplane.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/airplane-primary-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The airplane does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "airplanes"
        ],
        "summary": "Retrieves an individual airplane by its identifier without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-airplane",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The airplane does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "airplanes"
        ],
        "summary": "Updates an existing airplane.",
        "operationId": "patch-airplane",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the airplane to update. Omitted fields are left unchanged.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/update-airplane-request-document"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The airplane was successfully updated, which resulted in additional changes. The updated airplane is returned.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/airplane-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The airplane was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The airplane or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type or identifier in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "airplanes"
        ],
        "summary": "Deletes an existing airplane by its identifier.",
        "operationId": "delete-airplane",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The airplane was successfully deleted."
          },
          "404": {
            "description": "The airplane does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/airplanes/{id}/flights": {
      "get": {
        "tags": [
          "airplanes"
        ],
        "summary": "Retrieves the related flights of an individual airplane's flights relationship.",
        "operationId": "get-airplane-flights",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane whose related flights to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flights, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The airplane does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "airplanes"
        ],
        "summary": "Retrieves the related flights of an individual airplane's flights relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-airplane-flights",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane whose related flights to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The airplane does not exist."
          }
        }
      }
    },
    "/api/airplanes/{id}/relationships/flights": {
      "get": {
        "tags": [
          "airplanes"
        ],
        "summary": "Retrieves the related flight identities of an individual airplane's flights relationship.",
        "operationId": "get-airplane-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane whose related flight identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight identities, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-identifier-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The airplane does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "airplanes"
        ],
        "summary": "Retrieves the related flight identities of an individual airplane's flights relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-airplane-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane whose related flight identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The airplane does not exist."
          }
        }
      },
      "post": {
        "tags": [
          "airplanes"
        ],
        "summary": "Adds existing flights to the flights relationship of an individual airplane.",
        "operationId": "post-airplane-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane to add flights to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flights to add to the flights relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The flights were successfully added, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The airplane or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "airplanes"
        ],
        "summary": "Assigns existing flights to the flights relationship of an individual airplane.",
        "operationId": "patch-airplane-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane whose flights relationship to assign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flights to assign to the flights relationship, or an empty array to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The flights relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The airplane or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "airplanes"
        ],
        "summary": "Removes existing flights from the flights relationship of an individual airplane.",
        "operationId": "delete-airplane-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the airplane to remove flights from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flights to remove from the flights relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The flights were successfully removed, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The airplane or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flight-attendants": {
      "get": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves a collection of flight-attendants.",
        "operationId": "get-flight-attendant-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight-attendants, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-attendant-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves a collection of flight-attendants without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-attendant-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Creates a new flight-attendant.",
        "operationId": "post-flight-attendant",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the flight-attendant to create.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/create-flight-attendant-request-document"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The flight-attendant was successfully created, which resulted in additional changes. The newly created flight-attendant is returned.",
            "headers": {
              "Location": {
                "description": "The URL at which the newly created flight-attendant can be retrieved.",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-attendant-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The flight-attendant was successfully created, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "403": {
            "description": "Client-generated IDs cannot be used at this endpoint.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "A related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flight-attendants/{id}": {
      "get": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves an individual flight-attendant by its identifier.",
        "operationId": "get-flight-attendant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight-attendant.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-attendant-primary-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves an individual flight-attendant by its identifier without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-attendant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight-attendant does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Updates an existing flight-attendant.",
        "operationId": "patch-flight-attendant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the flight-attendant to update. Omitted fields are left unchanged.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/update-flight-attendant-request-document"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The flight-attendant was successfully updated, which resulted in additional changes. The updated flight-attendant is returned.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-attendant-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The flight-attendant was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type or identifier in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Deletes an existing flight-attendant by its identifier.",
        "operationId": "delete-flight-attendant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The flight-attendant was successfully deleted."
          },
          "404": {
            "description": "The flight-attendant does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flight-attendants/{id}/purser-on-flights": {
      "get": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves the related flights of an individual flight-attendant's purser-on-flights relationship.",
        "operationId": "get-flight-attendant-purser-on-flights",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose related flights to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flights, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves the related flights of an individual flight-attendant's purser-on-flights relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-attendant-purser-on-flights",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose related flights to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight-attendant does not exist."
          }
        }
      }
    },
    "/api/flight-attendants/{id}/relationships/purser-on-flights": {
      "get": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves the related flight identities of an individual flight-attendant's purser-on-flights relationship.",
        "operationId": "get-flight-attendant-purser-on-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose related flight identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight identities, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-identifier-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves the related flight identities of an individual flight-attendant's purser-on-flights relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-attendant-purser-on-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose related flight identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight-attendant does not exist."
          }
        }
      },
      "post": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Adds existing flights to the purser-on-flights relationship of an individual flight-attendant.",
        "operationId": "post-flight-attendant-purser-on-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant to add flights to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flights to add to the purser-on-flights relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The flights were successfully added, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Assigns existing flights to the purser-on-flights relationship of an individual flight-attendant.",
        "operationId": "patch-flight-attendant-purser-on-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose purser-on-flights relationship to assign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flights to assign to the purser-on-flights relationship, or an empty array to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The purser-on-flights relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Removes existing flights from the purser-on-flights relationship of an individual flight-attendant.",
        "operationId": "delete-flight-attendant-purser-on-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant to remove flights from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flights to remove from the purser-on-flights relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The flights were successfully removed, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flight-attendants/{id}/scheduled-for-flights": {
      "get": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves the related flights of an individual flight-attendant's scheduled-for-flights relationship.",
        "operationId": "get-flight-attendant-scheduled-for-flights",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose related flights to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flights, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves the related flights of an individual flight-attendant's scheduled-for-flights relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-attendant-scheduled-for-flights",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose related flights to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight-attendant does not exist."
          }
        }
      }
    },
    "/api/flight-attendants/{id}/relationships/scheduled-for-flights": {
      "get": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves the related flight identities of an individual flight-attendant's scheduled-for-flights relationship.",
        "operationId": "get-flight-attendant-scheduled-for-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose related flight identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight identities, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-identifier-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Retrieves the related flight identities of an individual flight-attendant's scheduled-for-flights relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-attendant-scheduled-for-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose related flight identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight-attendant does not exist."
          }
        }
      },
      "post": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Adds existing flights to the scheduled-for-flights relationship of an individual flight-attendant.",
        "operationId": "post-flight-attendant-scheduled-for-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant to add flights to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flights to add to the scheduled-for-flights relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The flights were successfully added, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Assigns existing flights to the scheduled-for-flights relationship of an individual flight-attendant.",
        "operationId": "patch-flight-attendant-scheduled-for-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant whose scheduled-for-flights relationship to assign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flights to assign to the scheduled-for-flights relationship, or an empty array to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The scheduled-for-flights relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "flight-attendants"
        ],
        "summary": "Removes existing flights from the scheduled-for-flights relationship of an individual flight-attendant.",
        "operationId": "delete-flight-attendant-scheduled-for-flights-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight-attendant to remove flights from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flights to remove from the scheduled-for-flights relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The flights were successfully removed, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight-attendant or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves a collection of flights.",
        "operationId": "get-flight-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flights, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves a collection of flights without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "flights"
        ],
        "summary": "Creates a new flight.",
        "operationId": "post-flight",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the flight to create.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/create-flight-request-document"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The flight was successfully created, which resulted in additional changes. The newly created flight is returned.",
            "headers": {
              "Location": {
                "description": "The URL at which the newly created flight can be retrieved.",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The flight was successfully created, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "403": {
            "description": "Client-generated IDs cannot be used at this endpoint.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "A related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/{id}": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves an individual flight by its identifier.",
        "operationId": "get-flight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-primary-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves an individual flight by its identifier without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "flights"
        ],
        "summary": "Updates an existing flight.",
        "operationId": "patch-flight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the flight to update. Omitted fields are left unchanged.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/update-flight-request-document"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The flight was successfully updated, which resulted in additional changes. The updated flight is returned.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The flight was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type or identifier in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "flights"
        ],
        "summary": "Deletes an existing flight by its identifier.",
        "operationId": "delete-flight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The flight was successfully deleted."
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/{id}/backup-purser": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant of an individual flight's backup-purser relationship.",
        "operationId": "get-flight-backup-purser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight-attendant, or `null` if it was not found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/nullable-flight-attendant-secondary-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant of an individual flight's backup-purser relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-backup-purser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight does not exist."
          }
        }
      }
    },
    "/api/flights/{id}/relationships/backup-purser": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant identity of an individual flight's backup-purser relationship.",
        "operationId": "get-flight-backup-purser-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant identity to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight-attendant identity, or `null` if it was not found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/nullable-flight-attendant-identifier-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant identity of an individual flight's backup-purser relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-backup-purser-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant identity to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "flights"
        ],
        "summary": "Clears or assigns an existing flight-attendant to the backup-purser relationship of an individual flight.",
        "operationId": "patch-flight-backup-purser-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose backup-purser relationship to assign or clear.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identity of the flight-attendant to assign to the backup-purser relationship, or `null` to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/nullable-to-one-flight-attendant-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The backup-purser relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/{id}/cabin-crew-members": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendants of an individual flight's cabin-crew-members relationship.",
        "operationId": "get-flight-cabin-crew-members",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendants to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight-attendants, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-attendant-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendants of an individual flight's cabin-crew-members relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-cabin-crew-members",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendants to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight does not exist."
          }
        }
      }
    },
    "/api/flights/{id}/relationships/cabin-crew-members": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant identities of an individual flight's cabin-crew-members relationship.",
        "operationId": "get-flight-cabin-crew-members-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight-attendant identities, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-attendant-identifier-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant identities of an individual flight's cabin-crew-members relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-cabin-crew-members-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight does not exist."
          }
        }
      },
      "post": {
        "tags": [
          "flights"
        ],
        "summary": "Adds existing flight-attendants to the cabin-crew-members relationship of an individual flight.",
        "operationId": "post-flight-cabin-crew-members-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight to add flight-attendants to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flight-attendants to add to the cabin-crew-members relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-attendant-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The flight-attendants were successfully added, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "flights"
        ],
        "summary": "Assigns existing flight-attendants to the cabin-crew-members relationship of an individual flight.",
        "operationId": "patch-flight-cabin-crew-members-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose cabin-crew-members relationship to assign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flight-attendants to assign to the cabin-crew-members relationship, or an empty array to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-attendant-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The cabin-crew-members relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "flights"
        ],
        "summary": "Removes existing flight-attendants from the cabin-crew-members relationship of an individual flight.",
        "operationId": "delete-flight-cabin-crew-members-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight to remove flight-attendants from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the flight-attendants to remove from the cabin-crew-members relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-flight-attendant-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The flight-attendants were successfully removed, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/{id}/passengers": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related passengers of an individual flight's passengers relationship.",
        "operationId": "get-flight-passengers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related passengers to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found passengers, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/passenger-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related passengers of an individual flight's passengers relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-passengers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related passengers to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight does not exist."
          }
        }
      }
    },
    "/api/flights/{id}/relationships/passengers": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related passenger identities of an individual flight's passengers relationship.",
        "operationId": "get-flight-passengers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related passenger identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found passenger identities, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/passenger-identifier-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related passenger identities of an individual flight's passengers relationship without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-passengers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related passenger identities to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight does not exist."
          }
        }
      },
      "post": {
        "tags": [
          "flights"
        ],
        "summary": "Adds existing passengers to the passengers relationship of an individual flight.",
        "operationId": "post-flight-passengers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight to add passengers to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the passengers to add to the passengers relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-passenger-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The passengers were successfully added, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "flights"
        ],
        "summary": "Assigns existing passengers to the passengers relationship of an individual flight.",
        "operationId": "patch-flight-passengers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose passengers relationship to assign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the passengers to assign to the passengers relationship, or an empty array to clear the relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-passenger-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The passengers relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "flights"
        ],
        "summary": "Removes existing passengers from the passengers relationship of an individual flight.",
        "operationId": "delete-flight-passengers-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight to remove passengers from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identities of the passengers to remove from the passengers relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-many-passenger-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The passengers were successfully removed, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/{id}/purser": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant of an individual flight's purser relationship.",
        "operationId": "get-flight-purser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight-attendant, or `null` if it was not found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-attendant-secondary-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant of an individual flight's purser relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-purser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight does not exist."
          }
        }
      }
    },
    "/api/flights/{id}/relationships/purser": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant identity of an individual flight's purser relationship.",
        "operationId": "get-flight-purser-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant identity to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found flight-attendant identity, or `null` if it was not found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/flight-attendant-identifier-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "flights"
        ],
        "summary": "Retrieves the related flight-attendant identity of an individual flight's purser relationship without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-flight-purser-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose related flight-attendant identity to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The flight does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "flights"
        ],
        "summary": "Assigns an existing flight-attendant to the purser relationship of an individual flight.",
        "operationId": "patch-flight-purser-relationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the flight whose purser relationship to assign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The identity of the flight-attendant to assign to the purser relationship.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/to-one-flight-attendant-in-request"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The purser relationship was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The flight or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/passengers": {
      "get": {
        "tags": [
          "passengers"
        ],
        "summary": "Retrieves a collection of passengers.",
        "operationId": "get-passenger-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found passengers, or an empty array if none were found.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/passenger-collection-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "passengers"
        ],
        "summary": "Retrieves a collection of passengers without returning them.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-passenger-collection",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "passengers"
        ],
        "summary": "Creates a new passenger.",
        "operationId": "post-passenger",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the passenger to create.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/create-passenger-request-document"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The passenger was successfully created, which resulted in additional changes. The newly created passenger is returned.",
            "headers": {
              "Location": {
                "description": "The URL at which the newly created passenger can be retrieved.",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/passenger-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The passenger was successfully created, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "403": {
            "description": "Client-generated IDs cannot be used at this endpoint.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "A related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "The request body contains conflicting information or another resource with the same ID already exists.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    },
    "/api/passengers/{id}": {
      "get": {
        "tags": [
          "passengers"
        ],
        "summary": "Retrieves an individual passenger by its identifier.",
        "operationId": "get-passenger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the passenger to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns the found passenger.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/passenger-primary-response-document"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The passenger does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "passengers"
        ],
        "summary": "Retrieves an individual passenger by its identifier without returning it.",
        "description": "Compare the returned ETag HTTP header with an earlier one to determine if the response has changed since it was fetched.",
        "operationId": "head-passenger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the passenger to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "A list of ETags, resulting in HTTP status 304 without a body, if one of them matches the current fingerprint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "Size of the HTTP response body, in bytes.",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "304": {
            "description": "The fingerprint of the HTTP response matches one of the ETags from the incoming If-None-Match header.",
            "headers": {
              "ETag": {
                "description": "A fingerprint of the HTTP response, which can be used in an If-None-Match header to only fetch changes.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The query string is invalid."
          },
          "404": {
            "description": "The passenger does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "passengers"
        ],
        "summary": "Updates an existing passenger.",
        "operationId": "patch-passenger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the passenger to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "For syntax, see the documentation for the [`include`](https://www.jsonapi.net/usage/reading/including-relationships.html)/[`filter`](https://www.jsonapi.net/usage/reading/filtering.html)/[`sort`](https://www.jsonapi.net/usage/reading/sorting.html)/[`page`](https://www.jsonapi.net/usage/reading/pagination.html)/[`fields`](https://www.jsonapi.net/usage/reading/sparse-fieldset-selection.html) query string parameters.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": ""
            }
          }
        ],
        "requestBody": {
          "description": "The attributes and relationships of the passenger to update. Omitted fields are left unchanged.",
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/update-passenger-request-document"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The passenger was successfully updated, which resulted in additional changes. The updated passenger is returned.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/passenger-primary-response-document"
                }
              }
            }
          },
          "204": {
            "description": "The passenger was successfully updated, which did not result in additional changes."
          },
          "400": {
            "description": "The query string is invalid or the request body is missing or malformed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "404": {
            "description": "The passenger or a related resource does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "409": {
            "description": "A resource type or identifier in the request body is incompatible.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          },
          "422": {
            "description": "Validation of the request body failed.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "passengers"
        ],
        "summary": "Deletes an existing passenger by its identifier.",
        "operationId": "delete-passenger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the passenger to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The passenger was successfully deleted."
          },
          "404": {
            "description": "The passenger does not exist.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response-document"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "aircraft-kind": {
        "enum": [
          "Turboprops",
          "LightJet",
          "MidSizeJet",
          "JumboJet"
        ],
        "type": "string"
      },
      "airline": {
        "enum": [
          "DeltaAirLines",
          "LufthansaGroup",
          "AirFranceKlm"
        ],
        "type": "string",
        "description": "Lists the various airlines used in this API."
      },
      "airplane-attributes-in-response": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "serial-number": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "airtime-in-hours": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "last-serviced-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "manufactured-at": {
            "type": "string",
            "description": "Gets the day on which this airplane was manufactured.",
            "format": "date-time"
          },
          "is-in-maintenance": {
            "type": "boolean"
          },
          "manufactured-in-city": {
            "maxLength": 85,
            "type": "string",
            "nullable": true
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aircraft-kind"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "airplane-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-collection-top-level-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/airplane-data-in-response"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "airplane-data-in-response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/data-in-response"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/airplane-attributes-in-response"
                  }
                ]
              },
              "relationships": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/airplane-relationships-in-response"
                  }
                ]
              },
              "links": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/resource-links"
                  }
                ]
              },
              "meta": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/meta"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        ],
        "additionalProperties": false
      },
      "airplane-primary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-top-level-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/airplane-data-in-response"
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "airplane-relationships-in-response": {
        "type": "object",
        "properties": {
          "flights": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-in-response"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "airplane-resource-type": {
        "enum": [
          "airplanes"
        ],
        "type": "string",
        "additionalProperties": false
      },
      "attributes-in-create-airplane-request": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "serial-number": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "airtime-in-hours": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "last-serviced-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "attributes-in-create-flight-attendant-request": {
        "required": [
          "email-address",
          "profile-image-url"
        ],
        "type": "object",
        "properties": {
          "email-address": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "age": {
            "maximum": 75,
            "minimum": 18,
            "type": "integer",
            "format": "int32"
          },
          "profile-image-url": {
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "attributes-in-create-passenger-request": {
        "required": [
          "document-number"
        ],
        "type": "object",
        "properties": {
          "document-number": {
            "maxLength": 9,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "attributes-in-update-airplane-request": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "serial-number": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "airtime-in-hours": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "last-serviced-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is-in-maintenance": {
            "type": "boolean"
          },
          "manufactured-in-city": {
            "maxLength": 85,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "attributes-in-update-flight-attendant-request": {
        "type": "object",
        "properties": {
          "email-address": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "age": {
            "maximum": 75,
            "minimum": 18,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "attributes-in-update-flight-request": {
        "type": "object",
        "properties": {
          "final-destination": {
            "maxLength": 40,
            "type": "string"
          },
          "stop-over-destination": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          },
          "operated-by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/airline"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "attributes-in-update-passenger-request": {
        "type": "object",
        "properties": {
          "document-number": {
            "maxLength": 9,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "cabin-area": {
        "enum": [
          "FirstClass",
          "BusinessClass",
          "EconomyClass"
        ],
        "type": "string"
      },
      "create-airplane-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/data-in-create-airplane-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "create-flight-attendant-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/data-in-create-flight-attendant-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "create-flight-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/data-in-create-flight-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "create-passenger-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/data-in-create-passenger-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "data-in-create-airplane-request": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/airplane-resource-type"
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attributes-in-create-airplane-request"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationships-in-create-airplane-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "data-in-create-flight-attendant-request": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-resource-type"
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attributes-in-create-flight-attendant-request"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationships-in-create-flight-attendant-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "data-in-create-flight-request": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-resource-type"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationships-in-create-flight-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "data-in-create-passenger-request": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passenger-resource-type"
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attributes-in-create-passenger-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "data-in-response": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "airplanes": "#/components/schemas/airplane-data-in-response",
            "flight-attendants": "#/components/schemas/flight-attendant-data-in-response",
            "flights": "#/components/schemas/flight-data-in-response",
            "passengers": "#/components/schemas/passenger-data-in-response"
          }
        },
        "x-abstract": true
      },
      "data-in-update-airplane-request": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/airplane-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attributes-in-update-airplane-request"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationships-in-update-airplane-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "data-in-update-flight-attendant-request": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attributes-in-update-flight-attendant-request"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationships-in-update-flight-attendant-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "data-in-update-flight-request": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attributes-in-update-flight-request"
              }
            ]
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationships-in-update-flight-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "data-in-update-passenger-request": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passenger-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/attributes-in-update-passenger-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "error-links": {
        "type": "object",
        "properties": {
          "about": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "error-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/error-links"
              }
            ],
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/error-source"
              }
            ],
            "nullable": true
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "error-response-document": {
        "required": [
          "errors",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/error-top-level-links"
              }
            ]
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error-object"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "error-source": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "nullable": true
          },
          "parameter": {
            "type": "string",
            "nullable": true
          },
          "header": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "error-top-level-links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          },
          "describedby": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "flight-attendant-attributes-in-response": {
        "type": "object",
        "properties": {
          "email-address": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "age": {
            "maximum": 75,
            "minimum": 18,
            "type": "integer",
            "format": "int32"
          },
          "profile-image-url": {
            "type": "string",
            "format": "uri"
          },
          "distance-traveled-in-kilometers": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "flight-attendant-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-collection-top-level-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flight-attendant-data-in-response"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-attendant-data-in-response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/data-in-response"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/flight-attendant-attributes-in-response"
                  }
                ]
              },
              "relationships": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/flight-attendant-relationships-in-response"
                  }
                ]
              },
              "links": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/resource-links"
                  }
                ]
              },
              "meta": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/meta"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        ],
        "additionalProperties": false
      },
      "flight-attendant-identifier-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-identifier-collection-top-level-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flight-attendant-identifier-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-attendant-identifier-in-request": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "flight-attendant-identifier-in-response": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "flight-attendant-identifier-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-identifier-top-level-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-identifier-in-response"
              }
            ]
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-attendant-primary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-top-level-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-data-in-response"
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-attendant-relationships-in-response": {
        "type": "object",
        "properties": {
          "scheduled-for-flights": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-in-response"
              }
            ]
          },
          "purser-on-flights": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-in-response"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-attendant-resource-type": {
        "enum": [
          "flight-attendants"
        ],
        "type": "string",
        "additionalProperties": false
      },
      "flight-attendant-secondary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-top-level-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-data-in-response"
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-attributes-in-response": {
        "type": "object",
        "properties": {
          "final-destination": {
            "maxLength": 40,
            "type": "string"
          },
          "stop-over-destination": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          },
          "operated-by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/airline"
              }
            ]
          },
          "departs-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "arrives-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "services-on-board": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "flight-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-collection-top-level-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flight-data-in-response"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-data-in-response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/data-in-response"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/flight-attributes-in-response"
                  }
                ]
              },
              "relationships": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/flight-relationships-in-response"
                  }
                ]
              },
              "links": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/resource-links"
                  }
                ]
              },
              "meta": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/meta"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        ],
        "additionalProperties": false
      },
      "flight-identifier-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-identifier-collection-top-level-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flight-identifier-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-identifier-in-request": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "flight-identifier-in-response": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "flight-primary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-top-level-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-data-in-response"
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-relationships-in-response": {
        "type": "object",
        "properties": {
          "cabin-crew-members": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-attendant-in-response"
              }
            ]
          },
          "purser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-one-flight-attendant-in-response"
              }
            ]
          },
          "backup-purser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nullable-to-one-flight-attendant-in-response"
              }
            ]
          },
          "passengers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-passenger-in-response"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "flight-resource-type": {
        "enum": [
          "flights"
        ],
        "type": "string",
        "additionalProperties": false
      },
      "jsonapi": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "ext": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "profile": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "meta": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        }
      },
      "nullable-flight-attendant-identifier-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-identifier-top-level-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-identifier-in-response"
              }
            ],
            "nullable": true
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "nullable-flight-attendant-secondary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-top-level-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-data-in-response"
              }
            ],
            "nullable": true
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "nullable-to-one-flight-attendant-in-request": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-identifier-in-request"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "nullable-to-one-flight-attendant-in-response": {
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationship-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-identifier-in-response"
              }
            ],
            "nullable": true
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "passenger-attributes-in-response": {
        "type": "object",
        "properties": {
          "full-name": {
            "type": "string",
            "nullable": true
          },
          "cabin-area": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cabin-area"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "passenger-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-collection-top-level-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/passenger-data-in-response"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "passenger-data-in-response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/data-in-response"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/passenger-attributes-in-response"
                  }
                ]
              },
              "links": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/resource-links"
                  }
                ]
              },
              "meta": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/meta"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        ],
        "additionalProperties": false
      },
      "passenger-identifier-collection-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-identifier-collection-top-level-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/passenger-identifier-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "passenger-identifier-in-request": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passenger-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "passenger-identifier-in-response": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passenger-resource-type"
              }
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "passenger-primary-response-document": {
        "required": [
          "data",
          "links"
        ],
        "type": "object",
        "properties": {
          "jsonapi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/jsonapi"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/resource-top-level-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passenger-data-in-response"
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "passenger-resource-type": {
        "enum": [
          "passengers"
        ],
        "type": "string",
        "additionalProperties": false
      },
      "relationship-links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          },
          "related": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "relationships-in-create-airplane-request": {
        "type": "object",
        "properties": {
          "flights": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-in-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "relationships-in-create-flight-attendant-request": {
        "type": "object",
        "properties": {
          "scheduled-for-flights": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-in-request"
              }
            ]
          },
          "purser-on-flights": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-in-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "relationships-in-create-flight-request": {
        "required": [
          "purser"
        ],
        "type": "object",
        "properties": {
          "cabin-crew-members": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-attendant-in-request"
              }
            ]
          },
          "purser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-one-flight-attendant-in-request"
              }
            ]
          },
          "backup-purser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nullable-to-one-flight-attendant-in-request"
              }
            ]
          },
          "passengers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-passenger-in-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "relationships-in-update-airplane-request": {
        "type": "object",
        "properties": {
          "flights": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-in-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "relationships-in-update-flight-attendant-request": {
        "type": "object",
        "properties": {
          "scheduled-for-flights": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-in-request"
              }
            ]
          },
          "purser-on-flights": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-in-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "relationships-in-update-flight-request": {
        "type": "object",
        "properties": {
          "cabin-crew-members": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-flight-attendant-in-request"
              }
            ]
          },
          "purser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-one-flight-attendant-in-request"
              }
            ]
          },
          "backup-purser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nullable-to-one-flight-attendant-in-request"
              }
            ]
          },
          "passengers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to-many-passenger-in-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "resource-collection-top-level-links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          },
          "describedby": {
            "type": "string"
          },
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          },
          "next": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "resource-identifier-collection-top-level-links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          },
          "related": {
            "type": "string"
          },
          "describedby": {
            "type": "string"
          },
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          },
          "next": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "resource-identifier-top-level-links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          },
          "related": {
            "type": "string"
          },
          "describedby": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "resource-links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "resource-top-level-links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          },
          "describedby": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "to-many-flight-attendant-in-request": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flight-attendant-identifier-in-request"
            }
          }
        },
        "additionalProperties": false
      },
      "to-many-flight-attendant-in-response": {
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationship-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flight-attendant-identifier-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "to-many-flight-in-request": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flight-identifier-in-request"
            }
          }
        },
        "additionalProperties": false
      },
      "to-many-flight-in-response": {
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationship-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flight-identifier-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "to-many-passenger-in-request": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/passenger-identifier-in-request"
            }
          }
        },
        "additionalProperties": false
      },
      "to-many-passenger-in-response": {
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationship-links"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/passenger-identifier-in-response"
            }
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "to-one-flight-attendant-in-request": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-identifier-in-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "to-one-flight-attendant-in-response": {
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/relationship-links"
              }
            ]
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flight-attendant-identifier-in-response"
              }
            ]
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/meta"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "update-airplane-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/data-in-update-airplane-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "update-flight-attendant-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/data-in-update-flight-attendant-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "update-flight-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/data-in-update-flight-request"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "update-passenger-request-document": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/data-in-update-passenger-request"
              }
            ]
          }
        },
        "additionalProperties": false
      }
    }
  }
}